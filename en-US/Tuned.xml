<?xml version='1.0'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docarticle/xml/4.5/docarticlex.dtd" [
]>
<section id="Tuned">
	<title>Tuned</title>
	
	<para>
		<application>Tuned</application> is a daemon that tunes system settings statically and dynamically according to selected profile(s). There are prepared various profiles for various use cases like high throughput, low latency and powersave. The static tuning mainly consists of application of predefined <systemitem>sysctl</systemitem> and <systemitem>sysfs</systemitem> settings and one-shot activation of several configuration tools like <application>ethtool</application>. The main advantage of using <application>tuned</application> is that all the changes made to the system settings by the specific profile can be easily rolled-back by simply unloading the profile (i.e. by switching to another profile or by deactivation of the <application>tuned</application> daemon). Tuned daemon also monitors the use of system components and tunes system settings dynamically based on that monitoring information. Dynamic tuning accounts for the way that various system components are used differently throughout the uptime for any given system. For example, the hard drive is used heavily during startup and login, but is barely used later when a user might mainly work with applications like WWW browsers or email clients. Similarly, the CPU and network devices are used differently at different times. <application>Tuned</application> monitors the activity of these components and reacts to changes in their use. 
	</para>
	<para>
		As a practical example, consider a typical office workstation. Most of the time, the Ethernet network interface will be very inactive. Only a few emails will go in and out every once in a while or some web pages might be loaded. For those kinds of loads, the network interface doesn't have to run at full speed all the time, as it does by default. <application>Tuned</application> has a monitoring and tuning plugin for network devices that can detect that low activity and then automatically lower the speed of that interface, typically resulting in lower power usage. If activity on the interface increases drastically for a longer period of time, for example because a DVD image is being downloaded or an email with a large attachment is opened, <application>tuned</application> detects this and sets the interface speed to maximum to offer the best performance while the activity level is so high. This principle is used for the other plugins for CPU and hard disks as well.
	</para>
  <para>
    There are two types of plugins in <application>tuned</application>, the monitoring and tuning plugins. Currently the following monitoring plugins are implemented:
  </para>
	<variablelist>
		<varlistentry>
			<term><literal>disk</literal></term>
			<listitem>
				<para>
					reports disk loads (number of IO operations) per device and measurement interval.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>net</literal></term>
			<listitem>
				<para>
					This plugin reports net loads (number of transferred packets) per network card and measurement interval.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>load</literal></term>
			<listitem>
				<para>
					This plugin reports CPU loads per CPU and measurement interval.
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
  <para>
    Output of the monitoring plugins can be used by tuning plugins for the dynamic tunings. Currently implemented dynamic tunings algorithms tries to balance performance and powersave, thus they are disabled in the performance profiles (dynamic tunings for individual plugins can be enabled/disabled in the <application>tuned</application> profiles). Each tuning plugin tunes individual subsystem and takes several parameters which are populated from the <application>tuned</application> profiles. Each subsystem can have multiple devices (e.g. multiple CPUs or network cards) which are handled by individual instances of the tuning plugins. Specific settings for individual devices is also supported. This can be also configured in the <application>tuned</application> profiles. In the supplied profiles there are simply wildcards that match all devices of individual subsystems (for details how to change it refer to <xref linkend="tuned-writing-profiles"/>). This way the plugins can tune the subsystems according to the required goal (selected profile) and the only thing that the user needs to do is to select the correct <application>tuned</application> profile (for details and list of supplied profiles see <xref linkend="tuned-adm"/>. Currently the following tuning plugins are implemented (only some of them implement dynamic tunings, supported parameters are also listed):
  </para>
	<variablelist>
		<varlistentry>
			<term><literal>cpu</literal></term>
			<listitem>
				<para>
					sets CPU <literal>governor</literal>, and dynamically changes PM QoS CPU DMA latency according to CPU load (set it to <literal>latency_high</literal> if CPU load is less than <literal>load_threshold</literal> otherwise set it to <literal>latency_low</literal>). Also the latency can be forced to specif value and not further dynamically changed by the setting the required value to the <literal>force_latency</literal>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>eeepc_she</literal></term>
			<listitem>
				<para>
					sets FSB speed according to CPU load, this feature can be especialy found on some netbooks and is also known as Asus Super Hybrid Engine. The plugin sets the FSB to the <literal>she_powersave</literal> value if the CPU load is bellow or equal to <literal>load_threshold_powersave</literal> and sets it to <literal>she_normal</literal> if the CPU load is above or equeal to <literal>load_threshold_normal</literal>. There is no supported static tunings. The plugin is transparently disabled if the hardware support for this feature is not found.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>net</literal></term>
			<listitem>
				<para>
				  sets <literal>wake_on_lan</literal> (uses same syntax as <application>ethtool</application>). It also dynamically changes the interface speed according to interface utilization. 
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>sysctl</literal></term>
			<listitem>
				<para>
					it can set various <systemitem>sysctl</systemitem> settings. Use it in case you need to change settings which are not covered by other plugins (please prefer other plugins if the settings is covered there).
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>usb</literal></term>
			<listitem>
				<para>
					enables / disables <literal>autosuspend</literal> for USB devices.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>vm</literal></term>
			<listitem>
				<para>
					enables / disables <literal>transparent_hugepages</literal>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>audio</literal></term>
			<listitem>
				<para>
					sets autosuspend <literal>timeout</literal> for audio codecs (currently snd_hda_intel and snd_ac97_codec are supported), also the controller reset can be enforced by <literal>reset_controller</literal>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>disk</literal></term>
			<listitem>
				<para>
					sets <literal>elevator</literal>, <literal>alpm</literal> (<xref linkend="ALPM"/>), <literal>aspm</literal> (<xref linkend="ASPM"/>), <literal>scheduler_quantum</literal>, disk <literal>spindown</literal>, disk <literal>readahead</literal> or multiply the current disk readahead by <literal>readahead_multiply</literal>. This plugin reports CPU loads per CPU and measurement interval. It also dynamically changes the advanced power management and spindown setting for the drive according to the current drive load (number of IO operations per monitored interval).
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>mounts</literal></term>
			<listitem>
				<para>
					enables / disables barriers for the mounts according to settings of <literal>disable_barriers</literal>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>script</literal></term>
			<listitem>
				<para>
					this plugin can be used for execution of external <literal>script</literal> on profile load / unload. The script takes one argument (<literal>start</literal> or <literal>stop></literal> whether it is run on profile load / unload.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><literal>sysfs</literal></term>
			<listitem>
				<para>
					it can set various <systemitem>sysfs</systemitem> settings. Use it in case you need to change settings which are not covered by other plugins (please prefer other plugins if the settings is covered there).
				</para>
			</listitem>
		</varlistentry>
			<varlistentry>
			<term><literal>video</literal></term>
			<listitem>
				<para>
				 it can set radeon graphics to various powersave levels according to <literal>radeon_powersave</literal> settings (<literal>default</literal>, <literal>auto</literal>, <literal>low</literal>, <literal>mid</literal>, <literal>high</literal>, <literal>dynpm</literal>).
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
 
  <para>
		Install the <package>tuned</package> package and its associated <application>systemtap</application> scripts with the command:
	</para>
<screen><command>yum install tuned</command></screen>
	<para>
		Installing the <package>tuned</package> package also sets up a sample configuration file at <filename>/etc/tuned.conf</filename> and activates the default profile.
	</para>
	<para>
		Start <application>tuned</application> by running:
	</para>
<screen><command>service tuned start</command></screen>
	<para>
		To start <application>tuned</application> every time the machine boots, run:
	</para>
<screen><command>chkconfig tuned on</command></screen>
	<para>
		<application>Tuned</application> itself has additional options that you can use when you run it manually. The available options are:
	</para>
	<variablelist>
		<varlistentry>
			<term><option>-d</option></term>
			<term><option>--daemon</option></term>
			<listitem>
				<para>
					start <application>tuned</application> as a daemon instead of in the foreground.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><option>-c</option></term>
			<term><option>--conffile</option></term>
			<listitem>
				<para>
					use a configuration file with the specified name and path, for example, <literal>--conffile=/etc/tuned2.conf</literal>. The default is <filename>/etc/tuned.conf</filename>.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term><option>-D</option></term>
			<term><option>--debug</option></term>
			<listitem>
				<para>
					use the highest level of logging.
				</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<section id="The_tuned.conf_file">
		<title>The <filename>tuned.conf</filename> file</title>
		<para>
			The <filename>tuned.conf</filename> file contains configuration settings for <application>tuned</application>. By default, it is located at <filename>/etc/tuned.conf</filename>, but you can specify a different name and location by starting <application>tuned</application> with the <option>--conffile</option> option.
		</para>
		<para>
			The config file must always contain a <literal>[main]</literal> section that defines the general parameters for <application>tuned</application>. The file then contains a section for each plugin.
		</para>
		<para>
			The <literal>[main]</literal> section contains the following options:
		</para>
		<variablelist>
			<varlistentry>
				<term><option>interval</option></term>
				<listitem>
					<para>
						the interval at which <application>tuned</application> should monitor and tune the system, in seconds. The default value is <literal>10</literal>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>verbose</option></term>
				<listitem>
					<para>
						specifies whether output should be verbose. The default value is <literal>False</literal>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>logging</option></term>
				<listitem>
					<para>
						specifies the minimum priority of messages to be logged. In descending order, allowable values are: <literal>critical</literal>, <literal>error</literal>, <literal>warning</literal>, <literal>info</literal>, and <literal>debug</literal>. The default value is <literal>info</literal>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>logging_disable</option></term>
				<listitem>
					<para>
						specifies the maximum priority of messages to be logged; any messages with this priority or lower will not be logged. In descending order, allowable values are: <literal>critical</literal>, <literal>error</literal>, <literal>warning</literal>, <literal>info</literal>, and <literal>debug</literal>. The value <literal>notset</literal> disables this option.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			Each plugin has its own section, specified with the name of the plugin in square brackets; for example: <literal>[CPUTuning]</literal>. Each plugin can have its own options, but the following apply to all plugins:
		</para>
		<variablelist>
			<varlistentry>
				<term><option>enabled</option></term>
				<listitem>
					<para>
						specifies whether the plugin is enabled or not. The default value is <literal>True</literal>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>verbose</option></term>
				<listitem>
					<para>
						specifies whether output should be verbose. If not set for this plugin, the value is inherited from <literal>[main]</literal>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><option>logging</option></term>
				<listitem>
					<para>
						specifies the minimum priority of messages to be logged. If not set for this plugin, the value is inherited from <literal>[main]</literal>.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			A sample config file follows:
		</para>
<programlisting>[main]
interval=10
pidfile=/var/run/tuned.pid
logging=info
logging_disable=notset

# Disk monitoring section

[DiskMonitor]
enabled=True
logging=debug

# Disk tuning section

[DiskTuning]
enabled=True
hdparm=False
alpm=False
logging=debug

# Net monitoring section

[NetMonitor]
enabled=True
logging=debug

# Net tuning section

[NetTuning]
enabled=True
logging=debug

# CPU monitoring section

[CPUMonitor]
# Enabled or disable the plugin. Default is True. Any other value
# disables it.
enabled=True

# CPU tuning section

[CPUTuning]
# Enabled or disable the plugin. Default is True. Any other value
# disables it.
enabled=True</programlisting>
	<para>
    The CPU tuning plugin recently added support for the Super Hybrid Engine (SHE), as found on some Asus EEEPCs. If you are using this engine, you can enable SHE support by adding <option>eeefsb=True</option> into the <literal>[CPUTuning]</literal> section of <filename>tuned.conf</filename>. It will automatically downclock your FSB and save power while on idle, returning to normal speed when the load increases significantly. This functionality is enabled by default in the <literal>laptop-battery-powersave</literal> profile.
  </para>
  </section>
	<section id="tuned-adm">
		<title>Tuned-adm</title>
		<para>
			Often, a detailed audit and analysis of a system can be very time consuming and might not be worth the few extra watts you might be able to save by doing so. Previously, the only alternative was simply to use the defaults. Therefore, Fedora&nbsp;&PRODVER; includes separate profiles for specific use cases as an alternative between those two extremes, together with the <application>tuned-adm</application> tool that allows you to switch between these profiles easily at the command line. Fedora&nbsp;&PRODVER; includes a number of predefined profiles for typical use cases that you can simply select and activate with the <command>tuned-adm</command> command, but you can also create, modify or delete profiles yourself.
		</para>
		<para>
			To list all available profiles and identify the current active profile, run:
		</para>
<screen><command>tuned-adm list</command></screen>
		<para>
			To only display the currently active profile, run:
		</para>
<screen><command>tuned-adm active</command></screen>
		<para>
			To switch to one of the available profiles, run:
		</para>
<screen><command>tuned-adm profile <replaceable>profile_name</replaceable></command></screen>
		<para>
			for example:
		</para>
<screen><command>tuned-adm profile server-powersave</command></screen>
		<para>
			To disable all tuning:
		</para>
<screen><command>tuned-adm off</command></screen>
		<para>
		  When you first install <application>tuned</application>, the <literal>balanced</literal> profile will be active. The following predefined profiles are available after installing <package>tuned</package>:
		</para>
		<variablelist>
		  
		<varlistentry>
				<term>balanced</term>
				<listitem>
					<para>
						the default power-saving profile. It enables CPU and disk plugins of <application>tuned</application> and activates the <command>ondemand</command> governor.
					</para>
				</listitem>
			</varlistentry>
			
			<varlistentry>
				<term>powersave</term>
				<listitem>
					<para>
						a profile for maximum power saving performance. It enables USB autosuspend, WiFi power saving, and ALPM power saving for SATA host adapters (refer to <xref linkend="ALPM"/>). It also schedules multi-core power savings for systems with a low wakeup rate and activates the <command>ondemand</command> governor.
					</para>
				</listitem>
			</varlistentry>
		  
			<varlistentry>
				<term>throughput-performance</term>
				<listitem>
					<para>
						a server profile for typical throughput performance tuning. It disables <application>tuned</application> and <application>ktune</application> power saving mechanisms, enables <application>sysctl</application> settings that improve the throughput performance of your disk and network I/O, and switches to the <application>deadline scheduler</application>.
					</para>
				</listitem>
			</varlistentry>
			
			<varlistentry>
				<term>latency-performance</term>
				<listitem>
					<para>
						a server profile for typical latency performance tuning. it disables <application>tuned</application> and <application>ktune</application> power saving mechanisms and enables <application>sysctl</application> settings that improve the latency performance of your network I/O.
					</para>
				</listitem>
			</varlistentry>
			
			<varlistentry>
				<term>virtual-guest</term>
				<listitem>
					<para>
						a profile designed for virtual guests based on the enterprise-storage profile that, among other tasks, decreases virtual memory swappiness.
					</para>
				</listitem>
			</varlistentry>
			
			<varlistentry>
				<term>virtual-host</term>
				<listitem>
					<para>
						a profile designed for virtual hosts based on the enterprise-storage profile that, among other tasks, decreases virtual memory swappiness and is more aggressive in its writeback of dirty pages.
					</para>
				</listitem>
			</varlistentry>
			
		      </variablelist>
		      
		      <para>
			Additional predefined profiles are available by installing the <package>tuned-profiles-compat</package> package:
		      </para>
		      
		      <variablelist>
		  
			<varlistentry>
				<term>default</term>
				<listitem>
					<para>
						this has the lowest impact on power saving of the available profiles and only enables CPU and disk plugins of <application>tuned</application>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>desktop-powersave</term>
				<listitem>
					<para>
						a power-saving profile directed at desktop systems. Enables ALPM power saving for SATA host adapters (refer to <xref linkend="ALPM"/>) as well as the CPU, Ethernet, and disk plugins of <application>tuned</application>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>server-powersave</term>
				<listitem>
					<para>
						a power-saving profile directed at server systems. Enables ALPM powersaving for SATA host adapters and activates the CPU and disk plugins of <application>tuned</application>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>laptop-ac-powersave</term>
				<listitem>
					<para>
						a medium-impact power-saving profile directed at laptops running on AC. Enables ALPM powersaving for SATA host adapters, Wi-Fi power saving, as well as the CPU, Ethernet, and disk plugins of <application>tuned</application>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>laptop-battery-powersave</term>
				<listitem>
					<para>
						a high-impact power-saving profile directed at laptops running on battery. It activates all power saving mechanisms from the previous profiles, plus it enables the multi-core power-savings scheduler for low wakeup systems and makes sure that the ondemand governor is active and that AC97 audio power-saving is enabled. On compatible Asus EEEPCs, it enables SHE support in the CPU tuning plugin. You can use this profile to save the maximum amount of power on any kind of system, not only laptops on battery power. The trade-off for this profile is a noticeable impact on performance, specifically latency of disk and network I/O.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>spindown-disk</term>
				<listitem>
					<para>
						a power-saving profile for machines with classic HDDs to maximize spindown time. It disables the <application>tuned</application> power savings mechanism, disables USB autosuspend, disables Bluetooth, enables Wi-Fi power saving, disables logs syncing, increases disk write-back time, and lowers disk swappiness. All partitions are remounted with <option>noatime</option>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>enterprise-storage</term>
				<listitem>
					<para>
						a server profile directed at enterprise-class storage, maximizing I/O throughput. It activates the same settings as the <literal>throughput-performance</literal> profile, multiplies readahead settings, and disables barriers on non-root and non-boot partitions.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			All the profiles are stored in separate subdirectories under <filename>/etc/tune-profiles</filename>. So <filename>/etc/tune-profiles/desktop-powersave</filename> contains all the necessary files and settings for that profile. Each of these directories contains up to four files:
		</para>
		<variablelist>
			<varlistentry>
				<term><filename>tuned.conf</filename></term>
				<listitem>
					<para>
						the configuration for the tuned service to be active for this profile.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>sysctl.ktune</filename></term>
				<listitem>
					<para>
						the <application>sysctl</application> settings used by <application>ktune</application>. The format is identical to the <filename>/etc/sysconfig/sysctl</filename> file (refer to the <citerefentry><refentrytitle>sysctl</refentrytitle></citerefentry> and <citerefentry><refentrytitle>sysctl.conf</refentrytitle></citerefentry> man pages).
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>ktune.sysconfig</filename></term>
				<listitem>
					<para>
						the configuration file of ktune itself, typically <filename>/etc/sysconfig/ktune</filename>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><filename>ktune.sh</filename></term>
				<listitem>
					<para>
						an <application>init</application>-style shell script used by the <application>ktune</application> service which can run specific commands during system startup to tune the system.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<para>
			The easiest way to start a new profile is to copy an existing one. The <literal>laptop-battery-powersave</literal> profile contains a very rich set of tunings already and is therefore a useful starting point. Simply copy the whole directory to the new profile name like this:
		</para>
<screen><command>cp -a /etc/tune-profiles/laptop-battery-powersave/ /etc/tune-profiles/myprofile</command></screen>
		<para>
			Modify any of the files in the new profile to match your personal requirements. 
		</para>
	</section>
	<section id="tuned-writing-profiles">
		<title>Writing profiles</title>
		<para>
    Writing profiles.
    </para>
	</section>
	<section id="powertop2tuned">
		<title>Powertop2tuned</title>
		<para>
    Powertop2tuned.
    </para>
	</section>
</section>

